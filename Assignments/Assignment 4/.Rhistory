library(readr)
X92_98_FIXED <- read_csv("C:/Users/Tony/Downloads/92_98_FIXED.csv")
View(X92_98_FIXED)
install.packages("ggplot2")
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x= X92_98_FIXED$data, y=X92_98_FIXED$SO4))
geom_point() +
geom_smooth(method = lm)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(readr)
biota <- read_csv("C:/Users/Tony/Downloads/biota.csv")
View(biota)
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(ggplot2)
library(dplyr)
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
# Read 2010EPI
names(data_2020EPI) <- as.matrix(data_2010EPI[1,])
setwd("~/GitHub/DataAnalytics2023_Tony_Min/Assignments/Assignment 4")
# load packages
library(ggplot2)
nyc <- read.csv("NYC_Citywide_Annualized_Calendar_Sales_Update_20231031.csv")
View(nyc)
nyc <- read.csv("NYC_Citywide_Annualized_Calendar_Sales_Update_20231102.csv")
View(nyc)
# Clean up nyc dataset for specific Borough
nyc <- nyc[nyc$BOROUGH == 'Brooklyn' | nyc$BOROUGH == '1',]
nyc$LAND.SQUARE.FEET <- gsub(",", '', as.character(nyc$LAND.SQUARE.FEET))
nyc$LAND.SQUARE.FEET <- as.numeric(nyc$LAND.SQUARE.FEET)
nyc$GROSS.SQUARE.FEET <- gsub(",", '', as.character((nyc$GROSS.SQUARE.FEET)))
nyc$GROSS.SQUARE.FEET <- as.numeric(nyc$GROSS.SQUARE.FEET)
nyc <- nyc[nyc$GROSS.SQUARE.FEET > 0 & !is.na(nyc$GROSS.SQUARE.FEET), ]
nyc <- nyc[nyc$LAND.SQUARE.FEET > 0 & !is.na(nyc$LAND.SQUARE.FEET), ]
nyc <- nyc[nyc$YEAR.BUILT > 0 & !is.na(nyc$YEAR.BUILT), ]
nyc <- nyc[nyc$SALE.PRICE > 0 & !is.na(nyc$SALE.PRICE), ]
summary(nyc$SALE.PRICE)
par((2, 2))
par(mfrow = c(2, 2))
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim = c(0, 25000000), main = "Sale Price Histogram")
hist(nyc$SALE.PRICE, xlim = c(0, 25000000), main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 250000000), main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 2000000), main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 2000000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 2500000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 25000000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$SALE.PRICE, xlim = c(0, 2500000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 1000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2400000), breaks = 1000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2400000), main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 240000), main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 240000), breaks = 10000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 240000), breaks = 1000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(0, 2050), breaks = 10, main = "Year Built Histogram", xlab = "Year BUilt")
hist(nyc$YEAR.BUILT, xlim = c(1800, 2050), breaks = 10, main = "Year Built Histogram", xlab = "Year BUilt")
par(mfrow = c(2, 2))
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim = c(0, 2500000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 240000), breaks = 1000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2050), breaks = 10, main = "Year Built Histogram", xlab = "Year BUilt")
hist(nyc$YEAR.BUILT, xlim = c(1800, 2050), breaks = 10, main = "Year Built Histogram", xlab = "Year Built")
hist(nyc$SALE.PRICE, xlim = c(0, 2500000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
summary(nyc$SALE.PRICE)
par(mfrow = c(2, 2))
hist(nyc$SALE.PRICE, xlim = c(0, 2500000), breaks = 10000, main = "Sale Price Histogram", xlab = "Sale Price")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 240000), breaks = 1000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$YEAR.BUILT, xlim = c(1800, 2050), breaks = 10, main = "Year Built Histogram", xlab = "Year Built")
summary(nyc$SALE.PRICE)
summary(nyc$GROSS.SQUARE.FEET)
summary(nyc$YEAR.BUILT)
library(stats)
# Finding Outliers
df <- data.frame(nyc$SALE.PRICE~nyc$GROSS.SQUARE.FEET+nyc$YEAR.BUILT)
# Finding Outliers
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
columns(df)
df
model <- lm(nyc$SALE.PRICE ~ nyc$GROSS.SQUARE.FEET + nyc$YEAR.BUILT)
cooksd <- cooks.distance(model)
cooksd <- cooks.distance(model)
outliers <- data.frame(Observation = 1:nrow(df), Cooks_distance = cooksd)
View(outliers)
CooksDistance <- cooks.distance(model)
round(CooksDistance, 5)
sort(CooksDistance)
outliers <- CooksDistance[(CooksDistance > (3 * mean(CooksDistance, na.rm = TRUE)))]
outliers
# Finding Outliers
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
model <- lm(nyc$SALE.PRICE ~ nyc$GROSS.SQUARE.FEET + nyc$YEAR.BUILT)
CooksDistance <- cooks.distance(model)
outliers <- CooksDistance[(CooksDistance > (3 * mean(CooksDistance, na.rm = TRUE)))]
outliers
# Finding Outliers
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
nrow(df)
na.omit(df)
df <- na.omit(df)
na.omit(df)
nrow(df)
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
cd <- cooks.distance(model)
outliers <- cd[(cd > (3 * mean(cd, na.rm = TRUE)))]
plot(model, pch = 18, col = 'blue', which = c(4))
plot(model, pch = 18, col = 'blue', which = c(4))
nameofoutlier <- names(outliers)
nameofoutlier
outliers
nameofinfluential <- names(influential)
nameofinfluential
outliers <- df[nameofinfluential,]
cd <- cooks.distance(model)
influential <- cd[(cd > (3 * mean(cd, na.rm = TRUE)))]
nameofinfluential <- names(influential)
nameofinfluential
outliers <- df[nameofinfluential,]
model2 <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df_without_outliers)
summary(model2)
nameofinfluential
outliers <- df[nameofinfluential,]
df_without_outliers <- df %>% anti_join(outliers)
model2 <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df_without_outliers)
summary(model2)
library(dplyr)
df_without_outliers <- df %>% anti_join(outliers)
model2 <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df_without_outliers)
summary(model2)
nameofinfluential
len(nameofinfluential)
length(nameofinfluential)
# Finding Outliers using IQR
Q1 <- quantile(df$SalePrice, 0.25)
Q3 <- quantile(df$SalePrice, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
outliers <- df[df$SalePrice < lower_bound | df$SalePrice > upper_bound, ]
outliers
length(outliers)
outliers
names(outliers)
Q1
Q3
length(outliers)
nrow(outliers)
# Multivariate Regression
multi <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$LAND.SQUARE.FEET)
colnames(mutli) <- c("SalePrice", "GrossSquareFeet", "LandSquareFeet")
# Multivariate Regression
multi <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$LAND.SQUARE.FEET)
colnames(multi) <- c("SalePrice", "GrossSquareFeet", "LandSquareFeet")
multi
na.omit(multi)
model_sale_gross_land <- lm(SalePrice ~ GrossSquareFeet + LandSquareFeet, data = multi)
summary(model_sale_gross_land)
model_sale_gross <- lm(SalePrice ~ GrossSquareFeet, data = multi)
summary(model_sale_gross)
model_sale_land <- lm(SalePrice ~ LandSquareFeet, data = multi)
summary(mode_sale_land)
summary(model_sale_land)
summary(model_sale_gross)
plot(SalePrice~GrossSquareFeet+LandSquareFeet, data = multi)
plot(SalePrice~GrossSquareFeet, data = multi)
abline(model_sale_gross, col = 'blue')
summary(model_sale_land)
plot(SalePrice~LandSquareFeet, data = multi)
abline(model_sale_gross, col = 'blue')
plot(SalePrice~LandSquareFeet, data = multi)
abline(model_sale_land, col = 'red')
summary(model_sale_gross)
model_sale_gross_land
model_sale_gross_land <- lm(SalePrice ~ GrossSquareFeet + LandSquareFeet, data = multi)
summary(model_sale_gross_land)
model_sale_gross <- lm(SalePrice ~ GrossSquareFeet, data = multi)
summary(model_sale_gross)
model_sale_land <- lm(SalePrice ~ LandSquareFeet, data = multi)
summary(model_sale_land)
summary(model_sale_gross_land)
model_sale_gross <- lm(SalePrice ~ GrossSquareFeet, data = multi)
summary(model_sale_gross)
plot(SalePrice~GrossSquareFeet, data = multi)
abline(model_sale_gross, col = 'blue')
model_sale_land <- lm(SalePrice ~ LandSquareFeet, data = multi)
summary(model_sale_land)
plot(SalePrice~LandSquareFeet, data = multi)
abline(model_sale_land, col = 'red')
# Decision Tree
library(randomForest)
# Decision Tree
library(randomForest)
install.packages("randomForest")
# Decision Tree
library(randomForest)
rf_model <- randomForest(nyc$SALE.PRICE~nyc$GROSS.SQUARE.FEET + nyc$YEAR.BUILT)
rf_model
install.packages("caTools")
library(caTools)
split <- sample.split(df, SplitRatio = 0.7)
split
train <- subset(df, split == "TRUE")
test <- subset(df, split == "FALSE")
train
rf_model <- randomForest(x = train[-5], y = train$SalePrice, ntree = 500)
rf_model
y_pred = predict(rf_model, newdata = test[-5])
y_pred = predict(rf_model, newdata = test[-5])
confusion_matrix <- table(test[,5], y_pred)
# Decision Tree
tree <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET)
colnames(dec) <- c("SalePrice", "GrossSquareFeet")
sam <- sample(150, 100)
train <- tree[sam, ]
test <- tree[-sam, ]
dim(train)
dim(test)
# Decision Tree
tree <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(dec) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
sam <- sample(150, 100)
train <- tree[sam, ]
test <- tree[-sam, ]
dim(test)
dec_tree <- rpart(SalePrice ~., train, method = 'class')
# Decision Tree
library(rpart)
dec_tree <- rpart(SalePrice ~., train, method = 'class')
dec_tree <- rpart(SalePrice~., train, method = 'class')
dec_tree <- rpart(SalePrice~., data = train, method = 'class')
train
tree <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
sam <- sample(150, 100)
train <- tree[sam, ]
test <- tree[-sam, ]
dec_tree <- rpart(SalePrice~., data = train, method = 'class')
dec_tree
rpart.plot(dec_tree)
install.packages("rpart.plot")
library(rpart.plot)
dec_tree <- rpart(SalePrice~., data = train, method = 'class')
rpart.plot(dec_tree)
tree <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET)
colnames(tree) <- c("SalePrice", "GrossSquareFeet")
sam <- sample(150, 100)
train <- tree[sam, ]
test <- tree[-sam, ]
dec_tree <- rpart(SalePrice~., data = train, method = 'class')
rpart.plot(dec_tree)
tree <- data.frame(nyc$SALE.PRICE, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "YearBuilt")
sam <- sample(150, 100)
train <- tree[sam, ]
test <- tree[-sam, ]
dec_tree <- rpart(SalePrice~., data = train, method = 'class')
rpart.plot(dec_tree)
plot(dec_tree)
plot(dec_tree, uniform = TRUE, main = "Classification Tree for Sale Price")
dec_tree <- rpart(SalePrice~., data = tree, method = 'class')
plot(dec_tree, uniform = TRUE, main = "Classification Tree for Sale Price")
text()
text(dec_tree, use.n = TRUE, all = TRUE, cex = .755)
dec_tree <- rpart(SalePrice~., data = tree, method = 'class')
plot(dec_tree, uniform = TRUE, main = "Classification Tree for Sale Price")
rpart.plot(dec_tree, uniform = TRUE, main = "Classification Tree for Sale Price")
tree <- data.frame(nyc$SALE.PRICE, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "YearBuilt")
dec_tree <- rpart(SalePrice~., data = tree, method = 'class')
rpart.plot(dec_tree, uniform = TRUE, main = "Classification Tree for Sale Price")
text(dec_tree, use.n = TRUE, all = TRUE, cex = .755)
tree <- data.frame(nyc$SALE.PRICE, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "YearBuilt")
dec_tree <- rpart(SalePrice~., data = tree, method = 'class')
rpart.plot(dec_tree, uniform = TRUE, main = "Decision Tree for Sale Price")
rpart.plot(dec_tree, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues")
rpart.plot(dec_tree, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues", box.x = 0)
rpart.plot(dec_tree, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues", fallen.leaves = FALSE)
dec_tree <- rpart(SalePrice~., data = tree, method = 'class')
rpart.plot(dec_tree, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues", fallen.leaves = FALSE)
rpart.plot(dec_tree)#, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues",)
rpart.plot(dec_tree, box.palette = "Blues")#, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues",)
dec_tree <- rpart(SalePrice~., data = tree)
rpart.plot(dec_tree, box.palette = "Blues")#, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues",)
rpart.plot(dec_tree, uniform = TRUE, box.palette = "Blues")#, uniform = TRUE, main = "Decision Tree for Sale Price", box.palette = "Blues",)
rpart.plot(dec_tree, uniform = TRUE, box.palette = "Blues", main = "Decision Tree for Sale Price")
tree <- data.frame(nyc$SALE.PRICE, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "YearBuilt")
dec_tree <- rpart(SalePrice~., data = tree)
rpart.plot(dec_tree, uniform = TRUE, box.palette = "Blues", main = "Decision Tree for Sale Price")
tree <- data.frame(nyc$SALE.PRICE, nyc$YEAR.BUILT)
colnames(tree) <- c("SalePrice", "YearBuilt")
tree <- na.omit(tree)
dec_tree <- rpart(SalePrice~., data = tree)
rpart.plot(dec_tree, uniform = TRUE, box.palette = "Blues", main = "Decision Tree for Sale Price")
library(rattle)
install.packages(rattle)
install.packages("rattle")
library(rattle)
library(rattle)
fancyRpartPlot(dec_tree)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
# Multivariate Regression Question 2
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
df <- df %>%
mutate(
SalePrice <- (SalePrice - mean(SalePrice)) / sd(SalePrice),
GrossSquareFeet <- (GrossSquareFeet - mean(GrossSquareFeet)) / sd(GrossSquareFeet),
YearBuilt <- (YearBuilt - mean(YearBuilt)) / sd(YearBuilt)
)
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
sd(SalePrice)
sd(df$SalePrice)
mean(df$SalePrice)
mean(df$`SalePrice <- (SalePrice - mean(SalePrice))/sd(SalePrice)`)
(SalePrice - mean(SalePrice)) / sd(SalePrice)
df <- df %>%
mutate(
SalePrice <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice),
GrossSquareFeet <- (GrossSquareFeet - mean(GrossSquareFeet)) / sd(GrossSquareFeet),
YearBuilt <- (YearBuilt - mean(YearBuilt)) / sd(YearBuilt)
)
test <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice)
sd(test)
mean(test)
# Multivariate Regression Question 2
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
df <- df %>%
mutate(
SalePrice <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice),
GrossSquareFeet <- (df$GrossSquareFeet - mean(df$GrossSquareFeet)) / sd(df$GrossSquareFeet),
YearBuilt <- (df$YearBuilt - mean(df$YearBuilt)) / sd(df$YearBuilt)
)
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
sd(df$SalePrice)
df <- df %>%
mutate(
df$SalePrice <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice),
df$GrossSquareFeet <- (df$GrossSquareFeet - mean(df$GrossSquareFeet)) / sd(df$GrossSquareFeet),
df$YearBuilt <- (df$YearBuilt - mean(df$YearBuilt)) / sd(df$YearBuilt)
)
sd(df$SalePrice)
summary(df)
# Multivariate Regression Question 2
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
summary(df)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
df$SalePrice <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice)
summary(df)
df$SalePrice <- (df$SalePrice - mean(df$SalePrice)) / sd(df$SalePrice)
df$GrossSquareFeet <- (df$GrossSquareFeet - mean(df$GrossSquareFeet)) / sd(df$GrossSquareFeet)
df$YearBuilt <- (df$YearBuilt - mean(df$YearBuilt)) / sd(df$YearBuilt)
summary(df)
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
# Multivariate Regression Question 2
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
df$GrossSquareFeet <- (df$GrossSquareFeet - mean(df$GrossSquareFeet)) / sd(df$GrossSquareFeet)
df$YearBuilt <- (df$YearBuilt - mean(df$YearBuilt)) / sd(df$YearBuilt)
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
# Multivariate Regression Question 2
df <- data.frame(nyc$SALE.PRICE, nyc$GROSS.SQUARE.FEET, nyc$YEAR.BUILT)
colnames(df) <- c("SalePrice", "GrossSquareFeet", "YearBuilt")
model <- lm(SalePrice ~ GrossSquareFeet + YearBuilt, data = df)
summary(model)
model2 <- lm(SalePrice ~ YearBuilt, data = df)
summary(model)
model2 <- lm(SalePrice ~ YearBuilt, data = df)
summary(model2)
testmodel <- lm(SALE.PRICE ~., data = nyc)
