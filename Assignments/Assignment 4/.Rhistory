num_vec = c(1, 2, 3, 5, 99)
class(num_vec)
num_vec = c(1, 3, 5,99)
class(num_vec)
install.pakages("MASSS")
library(MASS)
install.packages("MASSS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
attach(Boston)
?Boston
head(Boston)
head(Boston)
dim(Boston)
names(Boston)
str(Boston)
nrow(Boston)
ncol(Boston)
summary(Boston)
statistics
summary(Boston$crim)
setwd("C:/Users/ghpan/Documents/DataAnalytics2023_Tony_Min/Labs/lab3")
setwd("C:/Users/ghpan/Documents/DataAnalytics2023_Tony_Min/Assignments/Assignment 4")
nyc <- read.csv("NYC_Citywide_Annualized_Calendar_Sales_Update_20231031.csv")
View(nyc)
# Clean up nyc dataset for specific Borough
nyc <- nyc[nyc$BOROUGH == 'Brooklyn' | nyc$BOROUGH == '1',]
View(nyc)
# Clean up nyc dataset for specific Borough
nyc <- nyc[nyc$BOROUGH == 'Brooklyn' | nyc$BOROUGH == '1',]
nyc$LAND.SQUARE.FEET <- gsub(",", '', as.character(nyc$LAND.SQUARE.FEET))
nyc$LAND.SQUARE.FEET <- as.numeric(nyc$LAND.SQUARE.FEET)
nyc$GROSS.SQUARE.FEET <- gsub(",", '', as.character((nyc$GROSS.SQUARE.FEET)))
nyc$GROSS.SQUARE.FEET <- as.numeric(nyc$GROSS.SQUARE.FEET)
nyc <- nyc[nyc$GROSS.SQUARE.FEET > 0 & !is.na(nyc$GROSS.SQUARE.FEET), ]
nyc <- nyc[nyc$LAND.SQUARE.FEET > 0 & !is.na(nyc$LAND.SQUARE.FEET), ]
nyc <- nyc[nyc$YEAR.BUILT > 0 & !is.na(nyc$YEAR.BUILT), ]
nyc <- nyc[nyc$SALE.PRICE > 0 & !is.na(nyc$SALE.PRICE), ]
View(nyc)
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, breaks = 10000, xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, breaks = 10, xlab = "Gross Square Feet")
hist(nyc$SALE.PRICE, main="Sale Price Histogram", xlab="Sale Price")
hist(nyc$SALE.PRICE, breaks = 10000, main="Sale Price Histogram", xlab="Sale Price")
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$SALE.PRICE)
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2400000), breaks = 10, xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 10, xlab = "Gross Square Feet")
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 10, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$SALE.PRICE)
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2500))
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100))
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100), breaks = 10000)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100), main = "Year Built Histogram", xlab = "Year Built")
par(mfrow = c(3, 1))
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 10000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100), main = "Year Built Histogram", xlab = "Year Built")
par(mfrow = c(1, 3))
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 10000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100), main = "Year Built Histogram", xlab = "Year Built")
par(mfrow = c(2,2))
summary(nyc$SALE.PRICE)
hist(nyc$SALE.PRICE, xlim=c(0, 2000000), breaks=10000, main="Sale Price Histogram", xlab="Sale Price")
summary(nyc$GROSS.SQUARE.FEET)
hist(nyc$GROSS.SQUARE.FEET, xlim = c(0, 2500000), breaks = 10000, main = "Gross Square Feet Histogram", xlab = "Gross Square Feet")
summary(nyc$YEAR.BUILT)
hist(nyc$YEAR.BUILT, xlim = c(1800, 2100), main = "Year Built Histogram", xlab = "Year Built")
