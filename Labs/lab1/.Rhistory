library(readr)
X92_98_FIXED <- read_csv("C:/Users/Tony/Downloads/92_98_FIXED.csv")
View(X92_98_FIXED)
install.packages("ggplot2")
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x= X92_98_FIXED$data, y=X92_98_FIXED$SO4))
geom_point() +
geom_smooth(method = lm)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(readr)
biota <- read_csv("C:/Users/Tony/Downloads/biota.csv")
View(biota)
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
library(ggplot2)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
library(ggplot2)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
library(dplyr)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
library(ggplot2)
library(dplyr)
regressed <- lm(formula = day ~ SO4, data = X92_98_FIXED)
summary(regressed)
mean(X92_98_FIXED$SO4)
sd(X92_98_FIXED$SO4)
max(X92_98_FIXED$SO4)
min(X92_98_FIXED$SO4)
ggplot(X92_98_FIXED, aes(x = X92_98_FIXED$date, y = X92_98_FIXED$SO4))+
geom_point() +
geom_smooth(method = lm)
rotifer <- filter(biota, type =='rot')
t.test(biomass ~ time.frame, data=rotifer)
ggplot(rotifer, aes(time.frame, biomass, fill = time.frame)) +
geom_boxplot()
# Read 2010EPI
names(data_2020EPI) <- as.matrix(data_2010EPI[1,])
EPI_data <- read.csv("2010EPI_data.csv", header = TRUE)
# Change first row to be the header(
names(EPI_data) <- as.matrix(EPI_data[1,])
EPI_data <- EPI_data[-1,]
EPI_data[] <- lapply(EPI_data, function(x) type.convert(as.character(x)))
EPI_data
setwd("~/GitHub/DataAnalytics2023_Tony_Min/Labs/lab1")
EPI_data <- read.csv("2010EPI_data.csv", header = TRUE)
# Change first row to be the header(
names(EPI_data) <- as.matrix(EPI_data[1,])
EPI_data <- EPI_data[-1,]
EPI_data[] <- lapply(EPI_data, function(x) type.convert(as.character(x)))
EPI_data
View(EPI_data)
attach(EPI_data)
fix(EPI_data)
EPI_data
EPI <- EPI_data$EPI
EPI
tf <- is.na(EPI)
E <- EPI[!tf]
E
# Exercise 1: Exploring the Distribution
summary(EPI)
fivenum(EPI, na.rm = TRUE)
stem(EPI)
hist(EPI, seq(30., 95., 1.0), prob = TRUE)
lines(density(EPI, na.rm = TRUE, bw  = 1.))
#lines(density(EPI, na.rm = TRUE, bw  = "SJ"))
rug(EPI)
# Exercise 1: Fitting a distribution beyond histograms
# Cumulative density function
plot(ecdf(EPI), do.points = FALSE, verticals = TRUE)
# Quantile-Quantile
par(pty="s")
qqnorm(EPI)
qqline(EPI)
x <- seq(30, 96, 1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for tdsn")
qqline(x)
# Same Exploration with another 2 variables
AIR_H <- EPI_data$AIR_H
WATER_H <- EPI_data$W
qqplot(EPI, AIR_H)
boxplot(EPI,AIR_H)
qqplot(EPI, AIR_H)
boxplot(EPI, WATER_H)
boxplot(EPI, WATER_H)
WATER_H
EPI_data$WATER_H
View(EPI_data)
WATER_H <- EPI_data$WATER_H
boxplot(EPI,AIR_H)
qqplot(EPI, AIR_H)
boxplot(EPI, WATER_H)
qqplot(EPI, WATER_H)
# ====================================
# Exercise 2: Filtering
EPILand <- EPI[!Landlock]
EPILand
# ====================================
# Exercise 2: Filtering
# Reset Data
EPI_data <- read.csv("2010EPI_data.csv")
attack(EPI_data)
# ====================================
# Exercise 2: Filtering
# Reset Data
EPI_data <- read.csv("2010EPI_data.csv")
names(EPI_data) <- as.matrix(EPI_data[1,])
EPI_data <- EPI_data[-1,]
EPI_data[] <- lapply(EPI_data, function(x) type.convert(as.character(x)))
attach(EPI_data)
EPI <- EPI_data$EPI
EPI
Eland <- EPILand[!is.na(EPILand)]
# Landlock
EPILand <- EPI[!EPI_data$Landlock]
Eland <- EPILand[!is.na(EPILand)]
hist(Eland)
hist(Eland, seq(30., 95., 1.0), prob = TRUE)
plot(ecdf(EPI), do.points = FALSE, verticals = TRUE)
plot(ecdf(Eland), do.points = FALSE, verticals = TRUE)
# no surface water
surfaceWater <- EPI[!EPI_data$No_surface_water]
surfWater <- surfaceWater[!is.na(surfaceWater)]
# no surface water
surfaceWater <- EPI[!EPI_data$No_surface_water]
surfWater <- surfaceWater[!is.na(surfaceWater)]
hist(surfwater)
hist(surfwater, seq(30., 95., 1.0), prob = TRUE)
surfWater <- surfaceWater[!is.na(surfaceWater)]
hist(surfWater)
hist(surfWater, seq(30., 95., 1.0), prob = TRUE)
# Desert
desert <- EPI[!EPI_data$Desert]
des <- desertp[!is.na(desert)]
hist(des)
hist(des, seq(30., 95., 1.0), prob = TRUE)
# Desert
desert <- EPI[!EPI_data$Desert]
des <- desert[!is.na(desert)]
hist(des)
hist(des, seq(30., 95., 1.0), prob = TRUE)
HighPopDen <- EPI[!EPI_data$High_Population_Density]
hpd <- HighPopDen[!is.na(HighPopDen)]
hist(hpd)
hist(hpd, seq(30., 95., 1.0), prob = TRUE)
EPI_data$GEO_subregion
# Filter out Subregion
EPI_South_Asia <- EPI[EPI_data$GEO_subregion == "South Asia"]
# Filter out Subregion
EPI_South_Asia <- EPI[EPI_data$GEO_subregion == "South Asia"]
sa <- EPI_South_Asia[!is.na(EPI_South_Asia)]
hist(sa)
hist(sa, seq(30., 95., 1.0), prob = TRUE)
hist(sa)
